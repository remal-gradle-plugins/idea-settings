import groovy.json.JsonBuilder

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

buildscript {
    dependencies {
        classpath 'name.remal.gradle-plugins.test-source-sets:test-source-sets:2.2.3'
        classpath 'name.remal.gradle-plugins.idea-settings:idea-settings:2.0.0-rc-7'
        //classpath 'name.remal.gradle-plugins.idea-settings:idea-settings:2-SNAPSHOT'
        classpath 'com.gradle.publish:plugin-publish-plugin:1.0.0'
        classpath 'gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:1.1.6'
        classpath 'name.remal:gradle-plugins:1.7.0'
        classpath 'io.github.gradle-nexus:publish-plugin:1.1.0'
        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:2.0.2'
    }
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

allprojects {
    group = "name.remal.gradle-plugins.${rootProject.name}"
    version = '2-SNAPSHOT'
}

apply from: 'gradle/properties.gradle'
apply from: 'gradle/ci.gradle'
apply from: 'gradle/dependencies.gradle'
apply from: 'gradle/java.gradle'
apply from: 'gradle/classes-relocation.gradle'
apply from: 'gradle/groovy.gradle'
apply from: 'gradle/checkstyle.gradle'
apply from: 'gradle/errorprone.gradle'
apply from: 'gradle/gradle-plugin.gradle'
apply from: 'gradle/base-package.gradle'
apply from: 'gradle/publish-gradle-plugin.gradle'
apply from: 'gradle/publish-maven.gradle'
apply from: 'gradle/publish-maven-bom.gradle'
apply from: 'gradle/publish-maven-central.gradle'
apply from: 'gradle/signing.gradle'
apply from: 'gradle/process-readme.gradle'
apply from: 'gradle/renovate.gradle'
apply from: 'gradle/ide.gradle'

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

tasks.named('processIdeaSettings') {
    if (project.isNotRunningOnCi && gradle.startParameter.taskNames.contains('processIdeaSettingsDebug')) {
        doFirst {
            String jsonString = new JsonBuilder([ideaDirPath: rootProject.file('.idea').absolutePath]).toPrettyString()
            rootProject.file('layout.json').setText(jsonString, 'UTF-8')
        }
    }
}

tasks.create('processIdeaSettingsDebug') {
    group = 'debug'
    dependsOn('processIdeaSettings')
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

apply plugin: 'java-gradle-plugin'

dependencies {
    relocateClasses 'com.google.guava:guava'
    relocateClasses 'org.jdom:jdom'
    relocateClasses('net.sf.saxon:Saxon-HE') {
        exclude(group: 'xml-apis')
        exclude(group: 'org.apache.httpcomponents')
    }
    relocateClasses 'org.xmlunit:xmlunit-core'

    api 'gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext'


    testImplementation 'org.json:json'
}

gradlePlugin {
    plugins {
        'name.remal.idea-settings' {
            id = 'name.remal.idea-settings'
            implementationClass = 'name.remal.gradleplugins.ideasettings.IdeaSettingsPlugin'
            displayName = 'Configure IntelliJ IDEA project'
            description = property('repository-description')
        }
    }
}
