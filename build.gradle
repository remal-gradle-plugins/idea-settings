import groovy.json.JsonBuilder

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

buildscript {
    String rootGroupId = project.ext.rootGroupId = "name.remal.gradle-plugins.${rootProject.name}"
    String rootArtifactId = project.ext.rootArtifactId = rootProject.name
    String rootSnapshotVersion = project.ext.rootSnapshotVersion = '3-SNAPSHOT'
    dependencies {
        //classpath("$rootGroupId:$rootArtifactId:$rootSnapshotVersion") { version { strictly(rootSnapshotVersion) } }
        classpath 'name.remal.gradle-plugins.toolkit:build-logic:0.66.3'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

allprojects {
    group = project.rootGroupId
    version = project.rootSnapshotVersion
}

apply plugin: 'name.remal.toolkit.build-logic'

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

tasks.named('processIdeaSettings') {
    if (project.isNotRunningOnCi && gradle.startParameter.taskNames.contains('processIdeaSettingsDebug')) {
        doFirst {
            String jsonString = new JsonBuilder([ideaDirPath: rootProject.file('.idea').absolutePath]).toPrettyString()
            rootProject.file('layout.json').setText(jsonString, 'UTF-8')
        }
    }
}

tasks.create('processIdeaSettingsDebug') {
    group = 'debug'
    dependsOn('processIdeaSettings')
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

apply plugin: 'java-gradle-plugin'

dependencies {
    relocateClasses 'com.google.guava:guava'
    relocateClasses 'org.jdom:jdom2'
    relocateClasses 'org.xmlunit:xmlunit-core:2.10.0'

    api('gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:1.1.9') {
        exclude group: 'com.google.code.findbugs'
        exclude group: 'org.checkerframework'
        exclude group: 'com.google.errorprone'
        exclude group: 'com.google.j2objc', module: 'j2objc-annotations'
    }


    testImplementation 'org.json:json:20240303'
}

Configuration saxonConf = configurations.create('saxon') {
    configurations.relocateClasses.extendsFrom(it)

    dependencies.add(project.dependencies.create('net.sf.saxon:Saxon-HE:12.5'))
}

configurations.create('saxonOptionalDependencies') {
    configurations.excludeFromClassesRelocation.extendsFrom(it)
    configurations.excludeFromForcedClassesRelocation.extendsFrom(it)

    defaultDependencies { deps ->
        saxonConf.resolvedConfiguration.lenientConfiguration.allModuleDependencies.forEach { dep ->
            if (dep.moduleGroup == 'xml-apis'
                || dep.moduleGroup == 'org.apache.httpcomponents'
                || dep.moduleGroup.startsWith('org.apache.httpcomponents.')
            ) {
                deps.add(project.dependencies.create(group: dep.moduleGroup, name: dep.moduleName, version: dep.moduleVersion))
            }
        }
    }
}

gradlePlugin {
    plugins {
        'name.remal.idea-settings' {
            id = 'name.remal.idea-settings'
            implementationClass = 'name.remal.gradle_plugins.idea_settings.IdeaSettingsPlugin'
            displayName = 'Configure IntelliJ IDEA project'
            description = property('repository-description')
        }
    }
}

configurations.gradlePluginApiDependencies {
    exclude(group: 'com.google.code.findbugs')
    exclude(group: 'com.google.errorprone')
    exclude(group: 'com.google.guava')
    exclude(group: 'com.google.code.gson')
}
